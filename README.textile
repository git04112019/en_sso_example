h1. Sample Application with O'Reilly Single-Sign On (SSO)

h2. Basic Setup

* Create a new rails app (details in the "Rails Guides":http://guides.rubyonrails.org/getting_started.html#creating-a-new-rails-project)
* Install Devise (see "Getting Started" in the "README":https://github.com/plataformatec/devise)
* Install omniauth-openid, using instructions from the Devise wiki
** Be sure to configure a certificate authority root certificate file  (see config/initializers/omniauth.rb)
** The instructions for "Using OmniAuth without other authentications" didn't work out for me, even if I changed the :to for "sign_in" to something else, so I redirected that path instead  (see config/routes.rb)
** Use the sample for auto-creating users listed under "Google" (see "Devise wiki":https://github.com/plataformatec/devise/wiki/OmniAuth:-Overview)
** Skip :verify_authenticity_token filter on OpenID callback to make the devise helper stored_location_for work (see app/controllers/users/omniauth_callbacks_controller.rb)
** Customize the omniauth_callbacks_controller to refine error handling
** Add authorize_user! filter to check O'Reilly API for permissions

h2. Implemented Features

* User doesn't need to enter an OpenID URI; the SSO OpenID end-point is configured in config/initializers/devise.rb.
* The user bypasses the sign_in form and proceeds directly to OpenID to login; SSO is the only available authentication mechanism so there is no need to offer choices on the sign_in page
* SSO users who are new to the sample app will have a User record auto-created with the email address and identity_url returned from OpenID attribute exchange
* During auth failure, redirect back to root_url instead of sign_in to avoid a redirect loop
* Provide a specific error message when the app is not authorized by O'Reilly to use the OpenID service
* Access to content is restricted based on O'Reilly permissions API

h2. Unimplemented Features

* Logout from SSO when logging out from the sample app, using the exit_page parameter
* Cleanup fields related to password auth in the schema (left over from default Devise install)
* Save first and last name with the user record
* Configure the OpenID end-point URL on a per-environment basis
* Caching when accessing permissions API

h2. Running in Your Environment

Adapt config.oreilly parameters in your config/environments/*.rb files.
O'Reilly has some testing servers available for testing, but they are not all
publicly accessible.

h3. config.oreilly.openid_service_url

If you want to run this code in your environment, you'll need to pick an appropriate OpenID end-point.  Most features don't require O'Reilly Media's SSO end-point; you can use any public provider for test purposes.

If using O'Reilly Media's SSO, O'Reilly Media will need to authorize your app's domain to authenticate against the service.  If you see a "cancel" status from
SSO or too many redirects during authentication, this is likely the cause.

h3. config.oreilly.permissions_api_url

You'll need HTTP Basic Auth credentials to access this API outside of O'Reilly's internal network.

h2. Avoid devise_openid_authenticatable

Note that devise_openid_authenticatable won't work because it doesn't allow you to specify the OpenID end-point URL in a config file rather than receiving it from the user.

Making it work would require a patch to OpenidAuthenticatable#authenticate! where it pulls the :identifier out of params[scope].

https://github.com/nbudin/devise_openid_authenticatable/blob/master/lib/devise_openid_authenticatable/strategy.rb
